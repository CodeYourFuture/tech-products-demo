---
tags:
  - name: Resources
    description: Useful resources shared by the users.
  - name: Topics
    description: Topics to group the resources into.
  - name: Users
    description: The user accounts in the system.
  - name: Authentication
    description: Endpoints for login and security.
    externalDocs:
      url: https://docs.github.com/en/apps/oauth-apps/building-oauth-apps/authorizing-oauth-apps#web-application-flow

components:
  responses:
    BadRequestError:
      description: The request was not accepted.
      content:
        application/json:
          schema:
            type: object
            description: Object mapping fields to error messages.
            additionalProperties:
              type: string
            example:
              title: '"title" is required'
              url: '"url" must be a valid uri'
    ConflictError:
      description: The request conflicted with a previous request.
      content:
        text/plain:
          schema:
            type: string
            example: Conflict
    ForbiddenError:
      description: The user is not allowed to see the specified resource.
      content:
        text/plain:
          schema:
            type: string
            example: Forbidden
    InternalServerError:
      description: Something unexpected went wrong.
      content:
        text/plain:
          schema:
            type: string
            example: Internal Server Error
    NotFoundError:
      description: The resource was not found.
      content:
        text/html:
          schema:
            type: string
    UnauthorizedError:
      description: User not authenticated.
      content:
        text/plain:
          schema:
            type: string
            example: Unauthorized

  schemas:
    BaseResource:
      allOf:
        - $ref: "#/components/schemas/ResourceCreation"
        - type: object
          required: [accession, id, source]
          properties:
            accession:
              format: date-time
              type: string
            id:
              format: uuid
              type: string
            source:
              type: string
              format: uuid
              description: The ID of the user who suggested the resource.
    DraftResource:
      allOf:
        - $ref: "#/components/schemas/BaseResource"
        - type: object
          required: [status]
          properties:
            status:
              type: string
              example: "drafted"
            statusChangedDate:
              type: string
              example: null
              nullable: true
    EnrichedResource:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          properties:
            topic_name:
              type: string
              example: "HTML/CSS"
    PublishedResource:
      allOf:
        - $ref: "#/components/schemas/BaseResource"
        - type: object
          required: [status, statusChangedDate]
          properties:
            status:
              example: "published"
            statusChangedDate:
              type: string
              format: date-time
              nullable: false
            statusChangedBy:
              description: |
                The ID of the user who published the resource (or `null`, if the SUDO token was used).
              type: string
              format: uuid
    Resource:
      oneOf:
        - $ref: "#/components/schemas/DraftResource"
        - $ref: "#/components/schemas/PublishedResource"
    ResourceCreation:
      type: object
      required: [title, url]
      properties:
        description:
          type: string
          example: The main CodeYourFuture syllabus.
        title:
          type: string
          example: CYF Syllabus
        topic:
          type: string
          format: uuid
        url:
          type: string
          format: uri
          example: https://syllabus.codeyourfuture.io/
    PaginatedResources:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - type: object
          required: [resources]
          properties:
            resources:
              type: array
              items:
                $ref: "#/components/schemas/EnrichedResource"
    Pagination:
      type: object
      required: [page, lastPage, perPage, totalCount]
      properties:
        lastPage:
          type: number
          example: 3
        page:
          type: number
          example: 1
        perPage:
          type: number
          example: 20
        totalCount:
          type: number
          example: 52
    Topic:
      type: object
      required: [id, name]
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: SQL & Postgres
    User:
      type: object
      required: [id, github_id, name]
      properties:
        id:
          type: string
          format: uuid
        is_admin:
          type: boolean
        email:
          type: string
          format: email
          example: octocat@github.com
        github_id:
          type: number
          example: 1
        name:
          type: string
          example: Monalisa Octocat

  securitySchemes:
    authCookie:
      type: apiKey
      in: cookie
      name: connect.sid
    sudoToken:
      description: Defined by the `SUDO_TOKEN` environment variable.
      type: http
      scheme: bearer
